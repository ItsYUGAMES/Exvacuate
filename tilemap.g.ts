// 自动生成的代码。请勿编辑。
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "Level_Chasing":
            case "级别3":return tiles.createTilemap(hex`0d001e`, img`
...2.....2...
...2.....2...
...22...22...
...2.222.2...
...2.....2...
...222.222...
...2.....2...
...2.....2...
...2.....2...
...2.....2...
...2.....2...
...2.....2...
...2.....2...
...2...222...
...2.....2...
...2.....2...
...2.....2...
...2..22.2...
...2.....2...
...2.....2...
...2.....2...
...222...2...
...2.....2...
...2.....2...
...2.....2...
...2.....2...
...2.....2...
...22...22...
...22...22...
....2...2....
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile3,myTiles.tile7,myTiles.tile6], TileScale.Sixteen);
            case "级别":
            case "级别1":return tiles.createTilemap(hex``, img`
................
................
................
.......2........
.......2........
.......2........
.......2........
....2..2........
.......2........
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
`, [myTiles.transparency16,sprites.dungeon.floorLight0,myTiles.tile1,myTiles.tile2,sprites.castle.tilePath1], TileScale.Sixteen);
            case "Level1":
            case "Level1":return tiles.createTilemap(hex`1d0019000000000001030401000000000000000000000000000000000000000000000000000102020100000000000000000000000000000000000000000000010101010202010000000000000000000000000000000000000000000001020202020201010101010101010101010000000000000000000000000102020202020202020202020202020201010000000000000000000000010202020202020202020202020202020201010100000000000000000001020202020201010202020202020202020202010101010101010101000102020202020101010202020202020202020202020202020202020501010202020202010101010202020202020202020202020202020202050102020202020101010101020202020202010101010102020201010101010202020202010101010101020202020201020201010101010100000001010202020202010101010202020202020102020100000000000000000001020202020202020202020202020201010202010000000000000000000102020202020202020202020202020102020201000000000000000000010202020202020202020202020202010202020100000000000000000001010101010101010202010101010101020202010000000000000000000101010101010102020202010101010102020201000000000000000000010202020202020202020202010101020202020100000000000000000001020202020202020202020202010202020202010000000000000000000101020202020202020202020206020202020201000000000000000000000101020202020202020202020602020202020100000000000000000000010101020202020202020201010102020202010000000000000000000000010101020202020202010101010101010101000000000000000000000000010101060606010101010101010101000000000000000000000000000000010102020201010101010101010000000000000000000000`, img`
....2222.....................
....2..2.....................
.2222..2.....................
.2.....22222222222...........
.2...............22..........
.2................222........
.2.....22...........222222222
.2.....2.2...................
22.....2..2..................
2.....2...2......22222...2222
2.....22...2.....2..222222...
22.....2222......2..2........
.2..............22..2........
.2..............2...2........
.2..............2...2........
.22222222..222222...2........
.2222222....2...2...2........
.2...........2.2....2........
.2............2.....2........
.22...........2.....2........
...2..........2.....2........
....2........2.2....2........
.....2......2.222222.........
......222222.................
......2...2..................
`, [myTiles.transparency16,myTiles.tile3,myTiles.tile5,myTiles.tile8,myTiles.tile9,myTiles.tile11,myTiles.tile4], TileScale.Sixteen);
            case "Level1_Room2":
            case "级别2":return tiles.createTilemap(hex`18002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000202020202020200000000000000000000000000000000000205050505050200000000000000000000000000000000000205050505050200000000000000000000000000000000000205050505050200000000000000000000000000000000000202020702020200000000000000000000000000000000000000020702000000000000000000000000000000000000000000020702000000000000000000000000000002020202020202020402020202020202020200000000000002050505050505010503050505050505050200000000000002050505050505050505050505050505050200000000000002050505050505050505050505050505050200000000000002050505050505050505050505050505050200000000000002050502050505050505050505050505020200000000000002050505050505050505050505050501050200000000000002050505050505050505050505050501050200000000000002050505050505050505050505050501050200000000000002020202020202020502020202020202020200000000000000000000000000020502000000000000000000000000000000000000000000020502000000000000000000000000000002020202020202020502020202020202020000000000000002080505030505010501050501050505020000000000000002050505010505050505050505050505020000000000000002050505050505050505050505050505020000000000000002050505050505050505050505050505020000000000000002050505050505050505020404020202020000020202020202050505050505050505020505050505020000060505050505050505050505050505020505050505020000060505050505050505050505050505020505050505020000020202020202020202020202020202020202020202020000000000000000000000000000000000000000000000000000`, img`
........................
........................
..........2222222.......
..........2.....2.......
..........2.....2.......
..........2.....2.......
..........222.222.......
............2.2.........
............2.2.........
.....22222222.222222222.
.....2......2.........2.
.....2................2.
.....2................2.
.....2................2.
.....2..2............22.
.....2..............2.2.
.....2..............2.2.
.....2..............2.2.
.....22222222.222222222.
............2.2.........
............2.2.........
.....22222222.22222222..
.....2......2.2..2...2..
.....2...2...........2..
.....2...............2..
.....2...............2..
.....2.........2222222..
222222.........2.....2..
...............2.....2..
...............2.....2..
2222222222222222222222..
........................
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile3,myTiles.tile7,myTiles.tile4,myTiles.tile5,myTiles.tile12,myTiles.tile14,myTiles.tile15], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "BoxTile":
            case "tile2":return tile2;
            case "WallTile":
            case "tile3":return tile3;
            case "FloorTile":
            case "tile7":return tile7;
            case "ChannelTile":
            case "tile6":return tile6;
            case "myTile":
            case "tile1":return tile1;
            case "tile4":return tile4;
            case "tile5":return tile5;
            case "tile8":return tile8;
            case "tile9":return tile9;
            case "tile10":return tile10;
            case "tile11":return tile11;
            case "tile12":return tile12;
            case "tile13":return tile13;
            case "tile14":return tile14;
            case "myTile0":
            case "tile15":return tile15;
        }
        return null;
    })

}
// 自动生成的代码。请勿编辑。
